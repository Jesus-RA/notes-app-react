{"version":3,"sources":["context/NotesContext.jsx","components/Loader.jsx","components/Alert.jsx","components/EditNoteContent.jsx","components/AddNote.jsx","components/SearchBar.jsx","components/EditNote.jsx","components/Note.jsx","components/NotesDrawer.jsx","components/Theme.jsx","components/NotesApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["fetchNotes","setError","setErrorMessage","a","fetch","headers","response","ok","status","statusText","Swal","fire","title","icon","toast","position","showConfirmButton","json","data","errors","detail","timer","map","note","id","attributes","selfLink","links","self","NotesContext","createContext","NotesContextComponent","children","useState","notes","setNotes","notesToShow","setNotesToShow","loading","setLoading","error","errorMessage","useEffect","ignore","getNotes","Provider","value","Loader","loader","className","role","Alert","message","alertStyle","info","success","alert","EditNoteContent","content","setContent","markdownPreview","setMarkdownPreview","htmlFor","type","onChange","for","remarkPlugins","gfm","name","rows","placeholder","e","target","AddNote","setTitle","focusRef","useRef","useContext","current","focus","data-bs-toggle","data-bs-target","aria-labelledby","aria-hidden","ref","onClick","noteData","method","body","JSON","stringify","then","newNote","catch","console","SearchBar","filter","resutls","toLowerCase","includes","length","filterNotes","EditNote","titleEdited","setTitleEdited","contentEdited","setContentEdited","xmlns","width","height","fill","viewBox","d","fill-rule","noteEdited","notesEdited","currentNote","Note","created_at","onDelete","iconColor","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","showLoaderOnConfirm","preConfirm","noteId","find","notesFiltered","errorPromise","deleteNote","allowOutsideClick","isLoading","result","isConfirmed","text","dayjs","format","NotesDrawer","Theme","prefersDarkMode","window","matchMedia","matches","darkMode","setDarkMode","styles","document","querySelector","style","setProperty","setTheme","checked","NotesApp","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c2f0508.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\nimport Swal from 'sweetalert2'\n\nconst fetchNotes = async (setError, setErrorMessage) => {\n\n    const response = await fetch(\"https://notes-api-app.herokuapp.com/api/v1/notes\", {\n        headers: {\"Content-Type\": \"application/vnd.api+json\"}\n    })\n\n    if(!response.ok && response.status !== 406){\n        \n        setError(true)\n        setErrorMessage(response.statusText)\n\n        Swal.fire({\n            title: response.statusText,\n            icon: 'error',\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false\n        })\n\n        return []\n    }\n\n    const data = await response.json()\n\n    if(data?.errors){\n\n        setError(true)\n        setErrorMessage(data.errors.detail)\n\n        Swal.fire({\n            title: data.errors.detail,\n            icon: 'error',\n            toast: true,\n            timer: 5000,\n            position: 'top-end',\n            showConfirmButton: false\n        })\n        return []\n    }\n\n    return data.data.map( note => ({ id: note.id, ...note.attributes, selfLink: note.links.self }))\n\n}\n\nexport const NotesContext = createContext()\n\nexport function NotesContextComponent({ children }) {\n\n    const [notes, setNotes] = useState([])\n    const [notesToShow, setNotesToShow] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {\n        let ignore = false\n\n        async function getNotes(){\n            const data = await fetchNotes(setError, setErrorMessage)\n            if (!ignore){\n                setLoading(false)\n                setNotes(data)\n                setNotesToShow(data)\n            }\n        }\n\n        getNotes()\n\n        return () => ignore = true\n    }, [])\n\n    return (\n        <NotesContext.Provider value={ { notes, setNotes, notesToShow, setNotesToShow, loading, error, errorMessage } }>\n            { children }\n        </NotesContext.Provider>\n    )\n}\n","import React, { Fragment } from 'react'\n\nexport default function Loader({ loading }) {\n\n    const loader = <div className=\"spinner-grow loader\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n    </div>\n\n    return (\n        <Fragment>\n            {\n                loading \n                    ? loader\n                    : ''\n            }\n        </Fragment>\n    )\n}\n","import React from 'react'\n\nconst Alert = ({ message, alert }) => {\n\n    const alerts = {\n        info: 'alert-info',\n        error: 'alert-danger',\n        success: 'alert-success'\n    }\n\n    const alertStyle = alerts[alert]\n\n    return (\n        <div\n            className={`alert ${alertStyle} text-center col-md-8 mx-auto`}\n        >\n            { message }              \n        </div>\n    )\n}\n\nexport default Alert\n","import React, { useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\n\nconst EditNoteContent = ({ id = 0, content, setContent }) => {\n\n    const [markdownPreview, setMarkdownPreview] = useState(false)\n\n    return (\n        <div className=\"form-group mt-4\">\n            <div className=\"d-flex justify-content-between mb-2\">\n\n                <label htmlFor={`editNoteContent${id}`}>Note content:</label>\n\n                <div className=\"form-check form-switch\">\n                    <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        id=\"previewMarkdownSwitch\"\n                        value={ markdownPreview }\n                        onChange={ () => setMarkdownPreview(!markdownPreview) }\n                    />\n                    <label className=\"form-check-label\" for=\"previewMarkdownSwitch\">Preview</label>\n                </div>\n\n            </div>\n            {\n                markdownPreview\n                    ? <ReactMarkdown remarkPlugins={[gfm]}>{ content }</ReactMarkdown>\n                    : <textarea\n                        name=\"content\"\n                        id={`editNoteContent${id}`}\n                        rows=\"10\"\n                        className=\"form-control bg-transparent shadow-none\"\n                        placeholder=\"Note content...\"\n                        value={ content }\n                        onChange={ e => setContent( e.target.value ) }\n                    ></textarea>\n            }\n        </div>\n    )\n}\n\nexport default EditNoteContent\n","import React, { Fragment, useState, useRef, useEffect, useContext } from 'react'\nimport { NotesContext } from '../context/NotesContext'\nimport EditNoteContent from './EditNoteContent'\nimport '@sweetalert2/theme-dark'\nimport Swal from 'sweetalert2/src/sweetalert2.js'\n\nconst AddNote = () => {\n\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n    const focusRef = useRef(null)\n\n    const { notes, setNotes, setNotesToShow } = useContext(NotesContext)\n\n    useEffect( () => focusRef.current.focus() , [])\n\n    const onAddNote = () => {\n\n        const noteData = {\n            data: {\n                type: \"notes\",\n                attributes: {\n                    title,\n                    content\n                }\n            }\n        }\n\n        fetch(\"https://notes-api-app.herokuapp.com/api/v1/notes\", {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/vnd.api+json' },\n            body: JSON.stringify(noteData)\n        })\n            .then( response => response.json() )\n            .then( data => {\n\n                const newNote = { \n                    id: data.data.id,\n                    ...data.data.attributes,\n                    selfLink: data.data.links.self\n                }\n\n                setNotes([ ...notes, newNote ])\n                setNotesToShow([ ...notes, newNote ])\n\n                setTitle('')\n                setContent('')\n\n                Swal.fire({\n                    title: 'Note added',\n                    icon: 'success',\n                    toast: true,\n                    timer: 5000,\n                    position: 'top-end',\n                    showConfirmButton: false\n                })\n\n            })\n            .catch(console.error)\n\n    }\n\n    return (\n        <Fragment>\n            <button\n                type=\"button\"\n                className=\"btn btn-purple col-4 col-md-3\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#addNote\"\n            >\n                Add new note\n            </button>\n\n            <div className=\"modal fade\" id=\"addNote\" aria-labelledby=\"AddNotemodal\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg\">\n                    <div className=\"modal-content\">\n\n                        <div className=\"modal-header justify-content-end p-3 border-0\">\n                            <button\n                                className=\"btn btn-danger btn-sm\"\n                                data-bs-toggle=\"modal\"\n                                data-bs-target=\"#addNote\"\n                            >x</button>\n                        </div>\n\n                        <div className=\"modal-body\">\n                            \n                            <div className=\"form-group\">\n                                <label htmlFor=\"title\">Note title:</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    id=\"title\"\n                                    placeholder=\"Note title\"\n                                    className=\"form-control bg-transparent shadow-none\"\n                                    ref={ focusRef }\n                                    value={ title }\n                                    onChange={ e => setTitle( e.target.value ) }\n                                />\n                            </div>\n\n                            <EditNoteContent\n                                content={ content }\n                                setContent={ setContent }\n                            />\n\n                        </div>\n\n                        <div className=\"modal-footer border-0\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-purple w-100\"\n                                data-bs-toggle=\"modal\"\n                                data-bs-target=\"#addNote\"\n                                onClick={ onAddNote }\n                            >Add note</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default AddNote","import React, { useContext } from 'react'\nimport { NotesContext } from '../context/NotesContext'\nimport '@sweetalert2/theme-dark'\nimport Swal from 'sweetalert2/src/sweetalert2.js'\n\nconst SearchBar = () => {\n\n    const { notes, notesToShow, setNotesToShow } = useContext(NotesContext)\n\n    const filterNotes = e => {\n\n        const filter = e.target.value\n\n        const resutls = notesToShow.filter(note => note.title.toLowerCase().includes(filter.toLowerCase()) )\n\n        if(!resutls.length)\n            Swal.fire({\n                title: 'No results founded',\n                icon: 'info',\n                toast: true,\n                timer: 3000,\n                position: 'top-end',\n                showConfirmButton: false,\n            })\n\n        filter.length === 0\n            ? setNotesToShow(notes)\n            : setNotesToShow(resutls)\n\n    }\n\n    return (\n        <div className=\"form-group col-6 offset-2 col-md-6 offset-md-3\">\n            <input\n                type=\"text\"\n                name=\"search\"\n                placeholder=\"Search by title...\"\n                className=\"form-control bg-transparent shadow-none border-purple\"\n                onChange={ e => filterNotes(e) }\n            />\n        </div>\n    )\n}\n\nexport default SearchBar","import React, { Fragment, useState, useRef, useEffect, useContext } from 'react'\nimport { NotesContext } from '../context/NotesContext'\nimport EditNoteContent from './EditNoteContent'\nimport '@sweetalert2/theme-dark'\nimport Swal from 'sweetalert2/src/sweetalert2.js'\n\nconst EditNote = ({ note }) => {\n\n    const { id, title, content, selfLink } = note\n    const [titleEdited, setTitleEdited] = useState(title)\n    const [contentEdited, setContentEdited] = useState(content)\n    const focusRef = useRef(null)\n    const { notes, setNotesToShow } = useContext(NotesContext)\n\n    useEffect(() => {\n        focusRef.current.focus()\n    }, [])\n\n    const onSaveChanges = () => {\n        \n        const data = {\n            data: {\n                type: 'notes',\n                id: id,\n                attributes: {\n                    title: titleEdited,\n                    content: contentEdited\n                }\n            }\n        }\n\n        fetch(selfLink, {\n            method: 'PATCH',\n            headers: { 'Content-Type': 'application/vnd.api+json' },\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then(data => {\n\n                const noteEdited = { id, ...data.data.attributes, selfLink: data.data.links.self }\n                \n                const notesEdited = notes.map( currentNote => {\n                    if(currentNote.id === noteEdited.id)\n                        return noteEdited\n                \n                    return currentNote\n                } )\n            \n                setNotesToShow( notesEdited )\n\n                Swal.fire({\n                    title: 'Note updated',\n                    icon: 'success',\n                    toast: true,\n                    timer: 5000,\n                    position: 'top-end',\n                    showConfirmButton: false\n                })\n\n            })\n            .catch(error => console.error(error))\n\n    }\n\n    return (\n        <Fragment>\n\n            <button\n                type=\"button\"\n                className=\"btn btn-warning btn-sm\"\n                data-bs-toggle=\"modal\"\n                data-bs-target={`#editNote${id}`}\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n                    <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n                </svg>\n            </button>\n\n            <div className=\"modal fade\" id={`editNote${id}`} aria-labelledby=\"AddNotemodal\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg\">\n                    <div className=\"modal-content\">\n\n                        <div className=\"modal-header justify-content-end p-3 border-0\">\n                            <button\n                                className=\"btn btn-danger btn-sm\"\n                                data-bs-toggle=\"modal\"\n                                data-bs-target={`#editNote${id}`}\n                            >x</button>\n                        </div>\n\n                        <div className=\"modal-body\">\n                            \n                            <div className=\"form-group\">\n                                <label htmlFor=\"editNoteTitle\" className=\"mb-2\">Note title:</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    id={`editNoteTitle${id}`}\n                                    placeholder=\"Note title\"\n                                    className=\"form-control bg-transparent shadow-none\"\n                                    ref={ focusRef }\n                                    value={ titleEdited }\n                                    onChange={ e => setTitleEdited( e.target.value ) }\n                                />\n                            </div>\n\n                            <EditNoteContent content={ contentEdited } setContent={ setContentEdited } />\n\n                        </div>\n\n                        <div className=\"modal-footer border-0\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-purple w-100\"\n                                data-bs-toggle=\"modal\"\n                                data-bs-target={`#editNote${id}`}\n                                onClick={ onSaveChanges }\n                            >Save changes</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default EditNote","import React, { useContext } from 'react'\nimport '@sweetalert2/theme-dark'\nimport Swal from 'sweetalert2/src/sweetalert2.js'\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport EditNote from './EditNote'\n\nimport { NotesContext } from '../context/NotesContext'\nimport dayjs from 'dayjs'\n\nconst Note = ({ note }) => {\n\n    const { id, title, content, created_at } = note\n    const { notes, setNotes, setNotesToShow } = useContext(NotesContext)\n\n    const deleteNote = noteId => {\n\n        let selfLink = notes.find( note => note.id === noteId ).selfLink\n\n        fetch(selfLink, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/vnd.api+json'\n            }\n        })\n        .then(response => {\n            \n            if(!response.ok)\n                throw response.json()\n            \n        })\n        .then(() => {\n            const notesFiltered = notes.filter( note => note.id !== noteId )\n\n            setNotesToShow( notesFiltered )\n            setNotes( notesFiltered )\n        })\n        .catch(async errorPromise => {\n            const error = await errorPromise\n            Swal.fire({\n                title: error.errors.detail,\n                icon: 'error',\n                toast: true,\n                position: 'top-end',\n                showConfirmButton: false\n            })\n        })\n    }\n\n    const onDelete = () => {\n\n        Swal.fire({\n            title: 'Are you sure you want to delete this note?',\n            icon: 'warning',\n            iconColor: '343A40',\n            showCancelButton: true,\n            cancelButtonColor: '#d33',\n            confirmButtonColor: '#8412FF',\n            confirmButtonText: 'Yes, delete it!',\n            showLoaderOnConfirm: true,\n            preConfirm: () => deleteNote(id),\n            allowOutsideClick: () => !Swal.isLoading()\n        }).then( result => {\n            if(result.isConfirmed){\n                Swal.fire({\n                    title: 'Deleted!',\n                    text: 'You note has been deleted',\n                    icon: 'success',\n                    confirmButtonColor: '#8412FF'\n                })\n            }\n        })\n\n    }\n\n    return (\n        <div className=\"card shadow border-0\">\n            <div className=\"card-header\">\n                <div className=\"row\">\n                    <span className=\"col-8 col-md-7 col-lg-9\">\n                        { dayjs(created_at).format(\"MMM DD, YYYY hh:mm A\") }\n                    </span>\n\n                    <div className=\"col-4 col-md-5 col-lg-3 p-0\">\n                        <div className=\"d-flex justify-content-around p-0\">\n                            <EditNote note={ note } />\n                            <button className=\"btn btn-danger btn-sm\" onClick={ () => onDelete() }>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n                                    <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n                                </svg>\n                            </button>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n            <div className=\"card-body rounded shadow-sm\">\n\n                <h3 className=\"text-center\">Title: { title }</h3>\n                \n                <ReactMarkdown remarkPlugins={ [gfm] }>\n                    { content }\n                </ReactMarkdown>\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default Note","import React, { Fragment, useContext } from 'react'\nimport { NotesContext } from '../context/NotesContext'\n\nimport Note from './Note'\n\nconst NotesDrawer = () => {\n\n    const { notesToShow } = useContext(NotesContext)\n\n    return (\n        <Fragment>\n        {\n            notesToShow.map( (note) => (\n                <div className=\"col-md-4 mb-4\" key={note.id}>\n                  <Note note={note} />\n                </div>\n            ))\n        }\n        </Fragment>\n    )\n}\n\nexport default NotesDrawer","import React, { useState, useEffect } from 'react'\n\nconst Theme = () => {\n\n    let prefersDarkMode = false\n\n    if(window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches){\n        prefersDarkMode = true\n    }\n\n    const [darkMode, setDarkMode] = useState(prefersDarkMode)\n    \n    const setTheme = () => {\n\n        let styles = document.querySelector(':root').style\n        if(darkMode){\n            styles.setProperty('--dark', '#161B22')\n            styles.setProperty('--light', '#FCFAF8')\n            styles.setProperty('--card-background', '#343A40')\n        }else{\n            styles.setProperty('--dark', '#FCFAF8')\n            styles.setProperty('--light', '#161B22')\n            styles.setProperty('--card-background', '#FCFAF8')\n        }\n\n    }\n\n    useEffect( () => {\n   \n        setTheme()\n\n    }, [darkMode])\n\n    return (\n        <div className=\"form-check form-switch d-flex justify-content-end mb-4\">\n            <input\n                className=\"form-check-input mx-3\"\n                type=\"checkbox\"\n                id=\"previewMarkdownSwitch\"\n                checked={ darkMode }\n                onChange={ () => setDarkMode(!darkMode) }\n            />\n            <label\n                className={`form-check-label ${ darkMode ? 'text-white': ''}`}\n                for=\"previewMarkdownSwitch\"\n            >\n                Dark Mode\n            </label>\n        </div>\n    )\n}\n\nexport default Theme\n","import React, { useContext } from 'react'\n\nimport Loader from './Loader'\nimport Alert from './Alert'\nimport AddNote from './AddNote'\nimport SearchBar from './SearchBar'\nimport NotesDrawer from './NotesDrawer'\nimport Theme from './Theme'\n\nimport { NotesContext } from '../context/NotesContext'\n\nconst NotesApp = () => {\n\n    const { notes, loading, error, errorMessage } = useContext(NotesContext)\n\n    return (\n        <div className={`container py-5 ${ loading || error || !notes.length ? 'vh-100' : ''}`}>\n            <h1 className=\"text-center app-title\">Manage your notes and write them using Markdown</h1>\n            <Theme />\n            <div className=\"row\">\n                <AddNote />\n                <SearchBar />\n            </div>\n\n            <div className={`row mt-4 ${loading || error || !notes.length ? 'h-50 align-items-center justify-content-center' : ''}`}>\n\n                { !loading && error && <Alert message={ errorMessage } alert=\"error\" /> }\n                <Loader loading={ loading } />\n                { \n                    !loading\n                    && !error\n                    && !notes.length\n                    && <Alert message=\"You don't have notes yet, create the first one.\" alert=\"info\" />\n                }\n                {\n                    !loading && <NotesDrawer />\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default NotesApp\n","import React from 'react'\n\nimport { NotesContextComponent } from './context/NotesContext'\n\nimport NotesApp from './components/NotesApp'\n\nimport './App.css';\n\nfunction App() {\n\n  // const editNote = note => {\n\n  //   const notesEdited = notes.map( currentNote => {\n  //     if(currentNote.id === note.id)\n  //       return note\n\n  //     return currentNote\n  //   } )\n\n  //   setNotes( notesEdited )\n\n  // }\n\n  // const deleteNote = noteId => {\n\n  //   let selfLink = notes.find( note => note.id === noteId ).selfLink\n\n  //   fetch(selfLink, {\n  //     method: 'DELETE',\n  //     headers: {\n  //         'Content-Type': 'application/vnd.api+json'\n  //     }\n  //   })\n  //     .then(response => {\n        \n  //       if(!response.ok)\n  //         throw response.json()\n          \n  //     })\n  //     .then(() => setNotes( notes.filter( note => note.id !== noteId ) ))\n  //     .catch(async errorPromise => {\n  //       const error = await errorPromise\n  //       alert(error.errors.detail)\n  //     })\n  // }\n\n  // useEffect( () => {\n\n  //   const init = {\n  //     headers: { \"Content-Type\": \"application/vnd.api+json\" } \n  //   }\n\n  //   fetch(\"http://127.0.0.1:8000/api/v1/notes\", init)\n  //     .then(response => {\n  //       setLoading(false)\n  //       return response.json()\n  //     })\n  //     .then(data => {\n\n  //       if(data?.errors){\n  //         throw Error(data.errors.detail)\n  //       }\n        \n  //       setNotesIndexLink(data.links.self)\n\n  //       const notesFetched = data.data.map( note => ({ id: note.id, ...note.attributes, selfLink: note.links.self }))\n\n  //       setNotes(notesFetched)\n  //       setNotesToShow(notes)\n\n  //     })\n  //     .catch(console.error)\n\n  // }, [])\n\n  return (\n      <NotesContextComponent>\n        <NotesApp />\n      </NotesContextComponent>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@sweetalert2/theme-dark'\nimport 'dayjs'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}